from aiogram import Router, F, Bot, html
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from aiogram.enums import ParseMode

from keyboards.inline_kb import start_keyboard
# from handlers.apsched import send_message_cron
from services.fts_parser import get_fts_news
from services.sigma_parser import get_sigma_news


router = Router()

''' 3 –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –≤–µ–¥—É—Ç —Å–µ–±—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É, –∞–ª–µ—Ä—Ç—ã, —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –Ω–∞ 2-3 —Å–µ–∫ –æ–∫–Ω–æ'''


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message, bot: Bot, state: FSMContext):
    await state.clear()
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç! –°–µ–π—á–∞—Å –º–æ–≥—É –≤–æ—Ç —á—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å üëá ',
                         reply_markup=start_keyboard)


@router.callback_query(F.data == 'FTS')
async def send_fts_news(callback: CallbackQuery):
    fts_data = get_fts_news()
    if fts_data:
        for item in fts_data:
            await callback.send_message(chat_id='-1002043299400', text=f'<a href="{item[0]}">VED-TODAY</a>: {item[1]}',
                                   disable_web_page_preview=True)
    else:
        await callback.message.answer(text='–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞ https://ved.today –Ω–µ—Ç')


@router.callback_query(F.data == 'Sigma')
async def send_sigma_news(callback: CallbackQuery):
    sigma_news = get_sigma_news()
    if sigma_news:
        for item in sigma_news:
            await callback.send_message(chat_id='-1002043299400', text=f'<a href="{item[0]}">–°–ò–ì–ú–ê-–°–û–§–¢</a>: {item[1]}',
                                   disable_web_page_preview=True)
    else:
        await callback.message.answer(text='–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞ https://www.sigma-soft.ru –Ω–µ—Ç')


